[versions]
agp = "8.2.0"
kotlin = "2.0.0"
compose = "1.6.8"
compose-compiler = "1.5.4"
compose-material3 = "1.2.1"
androidx-activityCompose = "1.9.0"
androidx-core-ktx = "1.13.1"
androidx-appcompat = "1.7.0"
androidx-activity = "1.9.0"
coreKtx = "1.13.1"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
jetbrainsKotlinJvm = "1.9.20"
multiplatformSettingsVersion = "1.1.1"
core = "1.13.1"

# kotlinx
kotlinxSerializationVersion = "1.6.3"
kotlinxDateTimeVersion = "0.5.0"

# ktor
ktorClientVersion = "2.3.8"

# koin
io-koin = "3.5.0"

# moko
mokoMultiplatformPluginVersion = "0.14.2"
mokoResourcesVersion = "0.24.0-alpha-5"
mokoMvvmVersion = "0.16.1"
mokoNetworkVersion = "0.21.2"
mokoGraphicsVersion = "0.9.0"

# android custom view
swipeRefreshLayout="1.1.0"
swipeButton="1.0.3"
threetenabp="1.3.0"
gmsPlayServiceLocation="21.3.0"
splashScreenVersion = "1.0.0"

[libraries]
androidx-core = { group = "androidx.core", name = "core", version.ref = "core" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
activityXml = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidx-core-ktx" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettingsVersion" }
multiplatformSettingsCoroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformSettingsVersion" }
multiplatformSettingsTest = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatformSettingsVersion" }
kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "multiplatformSettingsVersion" }
multiplatformSettingsSerialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatformSettingsVersion" }

# kotlinx
kotlinSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }
kotlinxDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTimeVersion" }

# ktor
ktorClient = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientVersion" }
ktorClientLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktorClientVersion" }
ktorClientOkHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktorClientVersion" }
ktorClientMock = { module = "io.ktor:ktor-client-mock", version.ref = "ktorClientVersion" }
ktorClientIos = { module = "io.ktor:ktor-client-ios", version.ref = "ktorClientVersion" }
ktorClientDarwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktorClientVersion"}
ktorClientJson = { module = "io.ktor:ktor-client-json", version.ref = "ktorClientVersion"}
ktorClientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClientVersion"}

# koni
koinCore = { module = "io.insert-koin:koin-core", version.ref = "io-koin"}
koinAndroid = { module = "io.insert-koin:koin-android", version.ref = "io-koin"}

# moko
mokoResources = { module = "dev.icerock.moko:resources", version.ref = "mokoResourcesVersion" }
mokoResourcesCompose = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResourcesVersion" }
mokoResourcesGeneratorGradle = { module = "dev.icerock.moko:resources-generator", version.ref = "mokoResourcesVersion" }
mokoNetworkGenerator = { module = "dev.icerock.moko:network-generator", version.ref = "mokoNetworkVersion" }
mokoMvvmCore = { module = "dev.icerock.moko:mvvm-core", version.ref = "mokoMvvmVersion" }
mokoMvvmFlow = { module = "dev.icerock.moko:mvvm-flow", version.ref = "mokoMvvmVersion" }
mokoMvvmFlowCompose = { module = "dev.icerock.moko:mvvm-flow-compose", version.ref = "mokoMvvmVersion" }
mokoMvvmLiveData = { module = "dev.icerock.moko:mvvm-livedata", version.ref = "mokoMvvmVersion" }
mokoMvvmLiveDataResources = { module = "dev.icerock.moko:mvvm-livedata-resources", version.ref = "mokoMvvmVersion" }
mokoMvvmLiveDataCompose = { module = "dev.icerock.moko:mvvm-livedata-compose", version.ref = "mokoMvvmVersion" }
mokoMvvmState = { module = "dev.icerock.moko:mvvm-state", version.ref = "mokoMvvmVersion" }
mokoMvvmViewBinding = { module = "dev.icerock.moko:mvvm-viewbinding", version.ref = "mokoMvvmVersion" }
mokoMvvmTest = { module = "dev.icerock.moko:mvvm-test", version.ref = "mokoMvvmVersion" }
mokoGraphics = { module = "dev.icerock.moko:graphics", version.ref = "mokoGraphicsVersion" }

mokoNetwork = { module = "dev.icerock.moko:network", version.ref = "mokoNetworkVersion" }
mokoNetworkEngine = { module = "dev.icerock.moko:network-engine", version.ref = "mokoNetworkVersion" }
mokoNetworkErrors = { module = "dev.icerock.moko:network-errors", version.ref = "mokoNetworkVersion" }

# android custom view
swipeRefreshLayout  = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swipeRefreshLayout" }
swipeButton = { module = "com.github.mhdmoh:swipe-button", version.ref = "swipeButton"}
gmsPlayServiceLocation = { module = "com.google.android.gms:play-services-location", version.ref = "gmsPlayServiceLocation"}
threetenabp = { module = "com.jakewharton.threetenabp:threetenabp", version.ref = "threetenabp"}
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreenVersion" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
jetbrainsKotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin"}